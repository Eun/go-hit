// +build !generate

package hit

import errortrace "github.com/Eun/go-hit/errortrace"

// ⚠️⚠️⚠️ This file was autogenerated by generators/clear/clear ⚠️⚠️⚠️ //

// IClearSend provides methods to clear steps.
type IClearSend interface {
	IStep
	// Body clears all matching Body steps
	Body() IClearSendBody
	// Custom clears all matching Custom steps
	Custom(value ...Callback) IStep
	// Headers clears all matching Headers steps
	Headers(value ...string) IClearSendHeaders
	// Trailers clears all matching Trailers steps
	Trailers(value ...string) IClearSendHeaders
}
type clearSend struct {
	cp callPath
	tr *errortrace.ErrorTrace
}

func newClearSend(cp callPath) IClearSend {
	return &clearSend{cp: cp, tr: ett.Prepare()}
}
func (v *clearSend) trace() *errortrace.ErrorTrace {
	return v.tr
}
func (*clearSend) when() StepTime {
	return cleanStep
}
func (v *clearSend) callPath() callPath {
	return v.cp
}
func (v *clearSend) exec(hit *hitImpl) error {
	if err := removeSteps(hit, v.callPath()); err != nil {
		return err
	}
	return nil
}
func (v *clearSend) Body() IClearSendBody {
	return newClearSendBody(v.callPath().Push("Body", nil))
}
func (v *clearSend) Custom(value ...Callback) IStep {
	return removeStep(v.callPath().Push("Custom", callbackSliceToInterfaceSlice(value)))
}
func (v *clearSend) Headers(value ...string) IClearSendHeaders {
	return newClearSendHeaders(v.callPath().Push("Headers", stringSliceToInterfaceSlice(value)))
}
func (v *clearSend) Trailers(value ...string) IClearSendHeaders {
	return newClearSendHeaders(v.callPath().Push("Trailers", stringSliceToInterfaceSlice(value)))
}
