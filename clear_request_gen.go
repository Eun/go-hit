// +build !generate

package hit

import (
	"net/http"

	errortrace "github.com/Eun/go-hit/errortrace"
)

// ⚠️⚠️⚠️ This file was autogenerated by generators/clear/clear ⚠️⚠️⚠️ //

// IClearRequest provides methods to clear steps.
type IClearRequest interface {
	IStep
	// Headers clears all matching Headers steps
	Headers(value ...string) IClearSendHeaders
	// Host clears all matching Host steps
	Host(value ...string) IStep
	// Method clears all matching Method steps
	Method(value ...string) IStep
	// Set clears all matching Set steps
	Set(value ...*http.Request) IStep
	// Trailers clears all matching Trailers steps
	Trailers(value ...string) IClearSendHeaders
	// URL clears all matching URL steps
	URL() IClearRequestURL
}
type clearRequest struct {
	cp callPath
	tr *errortrace.ErrorTrace
}

func newClearRequest(cp callPath) IClearRequest {
	return &clearRequest{cp: cp, tr: ett.Prepare()}
}
func (v *clearRequest) trace() *errortrace.ErrorTrace {
	return v.tr
}
func (*clearRequest) when() StepTime {
	return cleanStep
}
func (v *clearRequest) callPath() callPath {
	return v.cp
}
func (v *clearRequest) exec(hit *hitImpl) error {
	if err := removeSteps(hit, v.callPath()); err != nil {
		return err
	}
	return nil
}
func (v *clearRequest) Headers(value ...string) IClearSendHeaders {
	return newClearSendHeaders(v.callPath().Push("Headers", stringSliceToInterfaceSlice(value)))
}
func (v *clearRequest) Host(value ...string) IStep {
	return removeStep(v.callPath().Push("Host", stringSliceToInterfaceSlice(value)))
}
func (v *clearRequest) Method(value ...string) IStep {
	return removeStep(v.callPath().Push("Method", stringSliceToInterfaceSlice(value)))
}
func (v *clearRequest) Set(value ...*http.Request) IStep {
	return removeStep(v.callPath().Push("Set", requestSliceToInterfaceSlice(value)))
}
func (v *clearRequest) Trailers(value ...string) IClearSendHeaders {
	return newClearSendHeaders(v.callPath().Push("Trailers", stringSliceToInterfaceSlice(value)))
}
func (v *clearRequest) URL() IClearRequestURL {
	return newClearRequestURL(v.callPath().Push("URL", nil))
}
